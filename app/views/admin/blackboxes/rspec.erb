<textarea>
# This spec file is autogenerated. 
# To generate a new one:
# - go to /admin/blackboxes/ID/rspec
# - copy paste the text within the textarea into this file
# - download gquery_hash.marshal and graph.ID.marshal into spec/fixtures
require 'spec_helper'

load_carriers

describe "Blackbox" do
  <% 
  @blackbox_scenarios.each do |scenario| 
    scenario.load_scenario
    gqueries = scenario.scenario_items(@blackbox, @blackbox_gqueries)
    series = scenario.scenario_items(@blackbox, @blackbox_output_series)
    deviation = scenario.deviation_total(gqueries, series)
  %>
  describe "scenario: <%= scenario.name %>" do
    before(:all) do
      Current.teardown_after_request!
      Current.scenario.update_statements = <%= scenario.update_statements.inspect %>
      Current.load_graph_from_marshal("spec/fixtures/gql.marshal")
      Gquery.load_gquery_hash_from_marshal("spec/fixtures/gquery_hash.marshal")
    end

  <% gqueries.each do |gquery| -%>
    <% if !gquery.expected_future_value.nil? and !gquery.expected_present_value.nil? %>
    it "should run gquery: <%= gquery.gquery.key %>" do
      r = Current.gql.query("<%= Gql::GqueryCleanerParser.clean(gquery.gquery.query) %>")
      v = r.future_value; (v.respond_to?(:to_i) ? v.to_i : nil).should == <%= gquery.expected_future_value.inspect %> 
      v = r.present_value; (v.respond_to?(:to_i) ? v.to_i : nil).should == <%= gquery.expected_present_value.inspect %> 
    end
    <% end %>
  <% end %>
  end
  <% end -%>
end
</textarea>

<h1>Download files</h1>
<%= link_to 'Graph Marshal', admin_graph_path(Current.graph.id, :format => :marshal) %>
<%= link_to 'Gquery Marshal', admin_gqueries_path(:format => :marshal) %>
