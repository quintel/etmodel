= render :partial => 'admin/blueprints/header' 

= javascript_include_tag 'tablesorter.min'
%script
  $(document).ready(function() { $("#blueprint_converters").tablesorter(); }); 

%h2 Blueprint Converters

%p
  = link_to 'Create new Blueprint Converter', new_admin_blueprint_converter_path
  

- dataset = Current.graph.dataset
-# datasets = []

- form_tag request.env['REQUEST_PATH'], :method => :get do
  = select_tag :graph_id, options_for_select(@blueprint.datasets.map{|gd| [gd.region_code, gd.graph.andand.id.to_s]}, Current.graph.id.to_s)
  = text_field_tag :attributes, @attributes.join(',')
  = submit_tag 'Show'

%table#blueprint_converters{table_defaults}
  %thead
    %tr
      %th ID 
      %th Key
      %th 
      %th Sector
      %th Use
      - Group.all.each do |group|
        %th.group= group.shortcut
      - @attributes.each do |attribute|
        %th= attribute
  %tbody
    - @blueprint_converters.each do |blueprint_converter|
      %tr{cycles}
        %td.tar== ##{"0"*(2-Math.log10(blueprint_converter.id).floor)}#{blueprint_converter.id}
        %td= link_to blueprint_converter.key, edit_admin_blueprint_converter_path(blueprint_converter)

        %td= link_to 'Del', [:admin, blueprint_converter], :method => :delete, :confirm => 'Are you really sure??!'
        %td= blueprint_converter.sector_key
        %td= blueprint_converter.use_key
        - Group.all.each do |group|
          - has_group = blueprint_converter.group_ids.include?(group.id)
          %th.group{:class => has_group ? "hasgroup" : 'hasnotgroup'}
            = group.shortcut if has_group
        - @attributes.each do |attribute|
          %td.tar= auto_number( Current.gql.query("present:V(#{blueprint_converter.full_key.downcase};#{attribute})")) rescue "ERROR!!"