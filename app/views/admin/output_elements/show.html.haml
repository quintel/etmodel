%h2
  = t "output_elements.#{@output_element.key}"
  (#{@output_element.key})

= link_to 'edit', edit_admin_output_element_path(@output_element)
|
= link_to 'delete', [:admin, @output_element], :method => :delete,
  :confirm => 'Are you sure?'

%h3 Series
%table.default
  %thead
    %tr
      %th.tal id
      %th.tal label
      %th.tal color
      %th Gquery
      %th.tal is_target_line
      %th Order
      %th

  %tbody
    -@output_element.output_element_series.each do |serie|
      %tr{:class => cycle('even', 'odd')}
        %td= serie.id
        %td= link_to serie.label, admin_output_element_serie_path(serie)
        %td{:style => "background: #{serie.color}"}= color_to_string(serie.color)
        %td= link_to serie.gquery, serie.url_in_etengine, :class => :external, :target => '_blank'
        %td= serie.is_target_line
        %td= serie.order_by
        %td
          = link_to 'edit', edit_admin_output_element_serie_path(:id => serie.id)
          |
          = link_to 'delete', admin_output_element_serie_path(:id => serie.id),
            :method => :delete, :confirm => 'Are you sure?'


%p= link_to 'Create new serie',
    new_admin_output_element_serie_path(:output_element_id => @output_element.id)

#chart_preview
  = content_tag_for :div, @output_element do
    Chart

- content_for :head do
  = render "layouts/etm/javascript_globals"
  = javascript_include_tag 'etm'
  :javascript
    App.settings = new Setting(#{Current.setting.to_json.html_safe});
    charts.load(#{@output_element.id}, "output_element_#{@output_element.id}")

