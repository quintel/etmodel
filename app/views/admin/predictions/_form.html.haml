= simple_form_for [:admin, @prediction] do |f|
  = f.error_messages
  = f.input :area, :collection => Api::Area.all.map(&:country)
  = f.input :input_element_id, :collection => InputElement.all.select{|x|!x.slide.nil?}.map{|x| [x.parsed_name_for_admin, x.id]}
  = f.input :user_id, :collection => User.ordered.map{|u| [u.backend_label, u.id]}
  = f.input :title, :required => false
  = f.input :expert
  = f.input :curve_type
  = f.input :description
  = f.button :submit

  %h3 Values
  %table
    %tr
      %th Year
      %th Value
      %th Delete
    %tr
      %th{:colspan => 3}
        If the slider indicates a growth then 100 means the present value
    = f.simple_fields_for :values do |v|
      %tr
        %td= v.text_field :year
        %td= v.text_field :value
        %td
          - unless v.object.new_record?
            = v.check_box :_destroy
  %h3 Measures
  = f.simple_fields_for :measures do |m|
    = m.input :name, :required => false
    = m.input :impact, :collection => PredictionMeasure::IMPACT.invert.to_a
    = m.input :cost, :collection => PredictionMeasure::COST.invert.to_a
    = m.input :year_start, :collection => 2000.step(2050,5).to_a
    = m.input :year_end, :collection => 2000.step(2050,5).to_a
    = m.input :actor
    = m.input :description
    - unless m.object.new_record?
      = m.input :_destroy, :as => :boolean

= link_to "back", admin_predictions_path
