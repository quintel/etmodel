%div
  = simple_form_for [:admin, @slide] do |f|
    = f.input :key,
      :hint => "Should be unique and recognizable! yes, also for others, check for conventions with WvL"
    = f.input :image,
      :hint => "this is the image shown in the slide description"
    = f.input :general_sub_header,
      :hint => "This will be shown above the unit of all the sliders"
    = f.input :group_sub_header,
      :hint => "This will be shown above all the groups of sliders (if there are any)"
    = f.input :subheader_image,
      :hint => "It's possible to add an extra image to the slide, check households > appliances for an example"
    = f.input :position,
      :hint => "Sorting position"
    = f.association :output_element,
      :collection => OutputElement.all.map{|c| ["##{c.id} #{c.key}", c.id]},
      :hint => "Default chart to be shown when the user clicks on the slide title"
    = f.association :alt_output_element,
      :collection => OutputElement.all.map{|c| ["##{c.id} #{c.key}", c.id]},
      :hint => "Secondary / legacy chart"
    = f.association :sidebar_item,
      :collection => SidebarItem.all.map{|s| [s.short_name, s.id]},
      :hint => "Where should this slide be shown?"
    = f.simple_fields_for :area_dependency do |j|
      = j.input :dependent_on, :as => :select, :collection => Api::Area::DEPENDABLE_ATTRIBUTES, :hint => "When you don't want to show the slide for areas without a certain setting. E.g. dont wanna show Solar CSP in NL? Put this to 'has_solar_csp' and be sure that for NL this value is false in the area data."

    = f.simple_fields_for :description do |j|
      = j.input :content_en
      = j.input :content_nl

    = f.button :submit

  = link_to "back", admin_slides_path
