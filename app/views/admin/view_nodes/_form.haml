- url = @view_node.new_record? ? admin_view_nodes_path : admin_view_node_path(@view_node)

- semantic_form_for @view_node, :url => url do |f|
  - f.inputs do 
    = hidden_field_tag :type, @view_node.element_type      
    = hidden_field_tag :tab, params[:tab]
    = hidden_field_tag :slide, params[:slide]
    = hidden_field_tag :sidebar, params[:sidebar]
    = f.hidden_field :parent_id
    = f.error_messages

    - if @view_node.parent.nil?
      = render "root_form", :f  => f

    - if @view_node.parent.andand.root?
      = f.input :element_id, :as => :select, :collection => Tab.all, :label_method => :key
      = f.input :position
      = f.hidden_field :element_type, :value => @view_node.element_type_or_default
      = link_to "New tab", new_admin_tab_path

    - if @view_node.parent.andand.tab?
      = f.input :element_id, :as => :select, :collection => SidebarItem.all, :label_method => :parsed_key_for_admin
      = f.input :position
      = f.hidden_field :element_type, :value => @view_node.element_type_or_default
      = link_to "New category", new_admin_sidebar_item_path

    - if @view_node.parent.andand.category?
      = f.input :element_id, :as => :select, :collection => Slide.find(:all, :order=> :action_name), :label_method => :parsed_name_for_admin
      = f.input :position
      = f.hidden_field :element_type, :value => @view_node.element_type_or_default
      = link_to "New slide", new_admin_slide_path
      
    - if @view_node.parent.andand.slide?
      .options
        - js = Proc.new {|container| "$('input[type=hidden], select', 'form .options').attr('disabled', false); $('input[type=hidden], select', '.#{container}').attr('disabled', true);$('input[type=checkbox]', '.#{container}').attr('checked', false)" }
        
        - if params[:input_element]
          %h3 Input Element
          =# check_box_tag 'input_element', 1, @view_node.input_element?, :onclick => js.call('output_elements')
          = f.input :element_id, :as => :select, :collection => InputElement.find(:all, :order=>"`key`"), :label_method => :parsed_name_for_admin, :input_html => {:style => "width:200px"}
          = f.input :position
          = f.hidden_field :element_type, :value => "InputElement"
          = link_to "New input element", "#"
        - if params[:output_element]
          %h3 Output Element
          =# check_box_tag 'output_element', 1, @view_node.output_element?, :onclick => js.call('input_elements')
          = f.input :element_id, :as => :select, :collection => OutputElement.find(:all, :order=>"`group`" ), :label_method => :parsed_name_for_admin
          = f.hidden_field :element_type, :value => "OutputElement"

    = f.buttons