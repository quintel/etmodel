#arrow_box_households
  = t("intro.section")
#shadowbox-outer{:style => "width: 70%; margin: 0px 0px 40px 25%;"}
  #shadow-bg-n.shadow-bg
  #shadow-bg-ne.shadow-bg
  #shadow-bg-e.shadow-bg
  #shadow-bg-se.shadow-bg
  #shadow-bg-s.shadow-bg
  #shadow-bg-sw.shadow-bg
  #shadow-bg-w.shadow-bg
  #shadow-bg-nw.shadow-bg
  #shadowbox-inner{:style => "padding: 20px 40px 40px 40px;" }
    #shadowbox-content{:style => "width: 100%"}
      #text_wide
        %h1= t("Who uses most energy?")
        %ul#blocks
          -# DEBT The API::Query object is still very ugly and I'm not happy with it
          - bars  = ['Households']
          - bars += ['Buildings'] if Current.setting.area
          - bars += ['Transport', 'Industry', 'Agriculture', 'Other']
          
          - queries = ['present:SUM(V(G(final_demand_cbs);final_demand))']
          - queries += bars.map{|x| "present:SUM(V(INTERSECTION(G(final_demand_cbs),SECTOR(#{x.downcase}));final_demand))"}
          - gql = Api::Query.new
          - gql.queries = queries
          - gql.fresh_session_id # DEBT: recycle existing session
          
          - total = gql.fetch_single_value('present:SUM(V(G(final_demand_cbs);final_demand))')
          - scale = 5
          
          - bars.each do |b|
            - key       = b.downcase
            - value     = gql.fetch_single_value("present:SUM(V(INTERSECTION(G(final_demand_cbs),SECTOR(#{key}));final_demand))")
            - percent   = value / total.to_f * 100
            - height    = percent * scale
            - active    = params[:action] == key
            - clickable = Current.view.sidebar_items.map(&:key).include?(key)
            %li{:style =>"height:#{height}px", :class => "#{key} #{'active' if active}"}
              %a{:href => ( clickable ? url_for(:action => key) : "#" )}
                = t(b)
              .number
                #{(value / BILLIONS).round(1)} PJ
              .percentage
                #{"%.2f" % percent}%
            
  .clear
#arrow_box_constraints
  = t("intro.results")
