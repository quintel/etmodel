= javascript_tag 'ETM.initOptimizer();'
%h1{:style => "text-align: left"} ETM - Optimizer

#input
  - form_tag '/optimizer' do
    = hidden_field_tag :scenario_id, params[:scenario_id]
    multiplier:
    =text_field_tag "multiplier", @step_value_multiplier
    =submit_tag 'update step values in table', {:onclick => "alert('hi!');"}
    -#=submit_tag 'divide all groups sliders by #sliders in group', {:onclick => "update_group_sliders();"}

  .tableactions
    %span
      %a{:href => 'javascript:ETM.optimizerController.sliderControlsController.showSelectedViews();'}
        Show only selected
    %span
      %a{:href => 'javascript:ETM.optimizerController.sliderControlsController.showAllViews();'}
        Show all
    %span
      %a{:href => 'javascript:ETM.optimizerController.sliderControlsController.toggleAllViews();'}
        Toggle selection
    %span
      %a{:href => 'javascript:ETM.optimizerController.sliderControlsController.setAllViews(true);'}
        Select all
    %span
      %a{:href => 'javascript:ETM.optimizerController.sliderControlsController.setAllViews(false);'}
        Deselect all
    %span
      %a{:href => 'javascript:show_checked_elements();'}
        Save current
    %span
      %a{:href => 'javascript:input_checked_elements();'}
        Load current
  
  - form_tag '/optimizer/optimizers', :id => "optimizer-form" do 

    = hidden_field_tag 'autoreload', 1

    %table.zebra#input_elements
      %thead
        %tr
          %th
          %th Share Group
          %th ID
          %th Name
          %th Slide
          %th Range (min-max)
          %th Current Value
          -#%th Step size (original) #we don't need this no more, right? It's always 0.1
          %th Step size for optimizer
          -#%th Possible Steps #for PJ only
      %thead
        - @slider_controls.each do |slider_control|
          - input_element = slider_control.input_element
          - input_element_id = "input_element_#{input_element.id}"
          %tr{:id => input_element_id, :class => [cycle("odd","even"), ("share_group_{input_element.share_group.to_s}" if input_element.share_group)]}
            %td= check_box_tag "input_element[#{input_element.id}][include]", 1, false #(true unless Current.user_values.include?(input_element.id))

            %td
              = input_element.share_group.to_s.humanize
              - if input_element.remainder?
                %strong R
            %td= input_element.id
            %td= input_element.name
            %td= "#{input_element.slide.controller_name}/#{input_element.slide.action_name}"
            %td= "(#{input_element.min_value.round(1)}-#{input_element.max_value.round(1)})"
            %td{:class => 'current_value'}=input_element.user_value
            -#%td= text_field_tag "input_element[#{input_element.id}][user_value]", input_element.user_value
            -#%td= auto_number input_element.step_value #we don't need this no more, right? It's always 0.1
            %td= text_field_tag "input_element[#{input_element.id}][step_value]", (input_element.calculated_step_value * @step_value_multiplier).round(2)
          = javascript_tag "ETM.optimizerController.addSliderControl(new SliderControl(#{slider_control.to_json}.slider_control), {'element':$('##{input_element_id}')})"
          
    .tableactions
      %span
        %a{:href => 'javascript:ETM.optimizerController.gqueryControlsController.showSelectedViews();'}
          Show only selected
      %span
        %a{:href => 'javascript:ETM.optimizerController.gqueryControlsController.showAllViews();'}
          Show all
      %span
        %a{:href => 'javascript:ETM.optimizerController.gqueryControlsController.toggleAllViews();'}
          Toggle selection
      %span
        %a{:href => 'javascript:ETM.optimizerController.gqueryControlsController.setAllViews(true);'}
          Select all
      %span
        %a{:href => 'javascript:ETM.optimizerController.gqueryControlsController.setAllViews(false);'}
          Deselect all


    %table.zebra
      %thead
        %tr
          %th
          %th ID
          %th Key
          %th= Current.scenario.start_year
          %th= Current.scenario.end_year
          %th Target
          %th Weight
          -#%th Higher is better
      %tbody
        - @gquery_controls.each do |gquery_control|
          - gquery = gquery_control.gquery
          - gquery_id = "gquery_#{gquery_control.gquery.id}"
          %tr{:id => gquery_id, :class=>cycle("odd","even")}
            %td= check_box_tag "gquery[#{gquery.id}][include]"
            %td= gquery.id
            %td= gquery.key.humanize
            - result =  Current.gql.query(gquery.query)
            %td= result.present_value.round(2)
            %td= result.future_value.round(2)
            -# target = @policy_goals[gquery.key.to_sym].andand.first.andand.target # we need this for policy goals -> but move to model!
            %td= text_field_tag "gquery[#{gquery.id}][target]", result.future_value.round(2)
            %td= select_tag "gquery[#{gquery.id}][weight]", options_for_select((1..10).to_a.map{|i| [i,i]} )
            -#%td= check_box_tag "gquery[#{gquery.id}][higher_is_better]"
          = javascript_tag "ETM.optimizerController.addGqueryControl(new GqueryControl(#{gquery_control.to_json}.gquery_control), {'element':$('##{gquery_id}')})"
    =submit_tag "Submit"

=javascript_tag "ETM.optimizerController.initOptimizerView($('#optimizerview'), $('#optimizer_start'), $('#optimizer-form'))"

#output{:style => 'display:none'}
  #optimizerlog
    #menubar
      = submit_tag 'start BETA AJAX optimizer', :id => "optimizer_start", :onclick => "ETM.optimizerController.toggle(); return false;"
      (scroll down for the old button to run)
    #optimizerview

#input_output_for_save_load{:style => 'background-color: #ccc; padding: 10px; float:left; width: 100%;'}
