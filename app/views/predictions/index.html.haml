= stylesheet_link_tag 'prediction'
= javascript_include_tag :defaults
= sprocket_include_tag 'backcasting'
:ruby
  colours = ["F00", "0F0", "00F", "FF0", "F0F", "0FF"]
  series = @input_element.predictions.map{|p| p.values_to_a}
  series_options = series.map{|x| {}}
  # To show the vertical bar representing the scenario end year I must add the
  # serie options as the last item.
  # TODO: refactor
  if @end_year && @end_year.to_i != 2050
    series << [[@end_year, @min_value], [@end_year, @max_value]]
    series_options << { lineWidth: 1, color: "ff0000", markerOptions: { show: false}}
  end

.prediction
  .intro
    Hier kun je jouw scenario vergelijken met verwachtingen van experts. Jouw scenario valt binnen/buiten de expertverwachtingen.
  .slider_title= @input_element.name
  .upper_block
    .chart#backcasting
    .available_predictions
      - @input_element.predictions.each do |p|
        .item
          = radio_button_tag :prediction_id, p.id, (p.id == @prediction.id)
          .color{:style => "background: #{cycle(*colours)}"}
          .label
            #{p.user.try(:name)},
            - if p.user.try(:company_school)
              #{p.user.company_school},
            = p.title
            - if v = p.last_value
              (#{"%0.f" % v.value}#{@input_element.unit} in #{v.year})
            - if current_user.try(:admin?)
              = link_to 'edit', edit_admin_prediction_path(p), :target => '_new'
  .prediction_details
    = render @prediction

:javascript
  $(function(){
    // ajax loading of prediction details
    $("input[type=radio]").click(function(){
      var prediction_id = $(this).val();
      var url = "/predictions/" + prediction_id;
      $(".prediction_details").busyBox({spinner: '<img src="/images/layout/ajax-loader.gif" />'});
      $(".prediction_details").load(url, function() {
        $(".prediction_details").busyBox('close');
      });
    });
    
    //charts
    $.jqplot("backcasting", #{series.to_json}, {
        grid: {
          background: '#ffffff',
          borderWidth: 0,
          borderColor: '#ffffff',
          shadow: false
        },
        axes:{
          xaxis:{tickOptions:{formatString:'%.0f'}},
          yaxis:{tickOptions:{formatString:'%.0f'}}
        },
        seriesColors: #{colours.to_json},
        series: #{series_options.to_json}
      }
    );
    
    // extra info links
    $(".more_info a").live('click', function(event){
      event.preventDefault();
      $(this).parent().find(".inline_description").toggle();
    });
  });