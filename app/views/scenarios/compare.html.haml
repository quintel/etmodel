- size = @scenarios.size
.scenario_wrapper
  %h2 Compare scenarios

  = form_tag merge_scenarios_path, :method => :post do
    %table.compare_scenarios
      %tbody
        - Tab.ordered.each do |tab|
          %tr.header
            %th
            %th
              Defaults
              %br
              Min/Default/Max
            %th Values Min
            %th
              Values Avg
            %th
              Avg w/defaults
            %th Values Max
            %th #
            - @scenarios.each do |s|
              %th{:width => '90'} #{s.title} (#{s.area_code} - #{s.end_year})
          %tr
            %th.tab= t "tabs.#{tab.key}"
            %td.cell
            %td.cell
            %td.cell
            %td.cell
            %td.cell
            %td.cell
            - size.times do
              %td.cell
          - tab.sidebar_items.each do |sidebar|
            - next if sidebar.key == 'merit_order'
            %tr
              %th.sidebar_item= t "sidebar_items.#{sidebar.key}.short_name"
              %td.cell
              %td.cell
              %td.cell
              %td.cell
              %td.cell
              - size.times do
                %td.cell
            - sidebar.slides.each do |slide|
              %tr
                %th.slide= raw t "slides.#{slide.key}"
                %td.cell
                %td.cell
                %td.cell
                %td.cell
                %td.cell
                %td.cell
                - size.times do
                  %td.cell

              - slide.sliders.each do |slider|
                :ruby
                  key = slider.key
                  attrs = @default_values[key] || {"min" => 0, "max" => 0, "default" => 0}
                  values = @scenarios.map{|s| s.user_values.attributes[key]}.compact
                  user_avg = (values.sum / values.compact.size).round(1) rescue '-'
                  total_avg = (@scenarios.map{|s| s.user_values.attributes[key] || attrs["default"]}.sum / @scenarios.size).round(1)
                  @average_values[key] = user_avg
                  @average_values_using_defaults[key] = total_avg
                %tr
                  %th.slider= raw t "input_elements.#{slider.key}"
                  %td.cell #{attrs["min"].round(1)}/#{attrs["default"].round(1)}/#{attrs["max"].round(1)}
                  %td.cell= values.min.round(1) rescue '-'
                  %td.cell= user_avg
                  %td.cell= total_avg
                  %td.cell= values.max.round(1) rescue '-'
                  %td.cell #{values.compact.size}/#{size}

                  - @scenarios.each do |s|
                    %td.cell= s.user_values.attributes[slider.key].round(1) rescue '-'

    %p
      %table
        %tr
          %th Average excluding defaults
          %th Average using defaults
        %tr
          %td= text_area_tag :inputs_avg, @average_values.to_yaml, :size => "85x20"
          %td= text_area_tag :inputs_def, @average_values_using_defaults.to_yaml, :size => "85x20"
      = submit_tag "Create a scenario using the average (with defaults) values"

