---
en:
  custom_curves:
    confirm_remove: Are you sure you wish to remove this curve and revert to the default?
    default: Default curve
    full_load_hours: Full load hours
    loading: Loading...
    max: Maximum
    mean: Mean
    min: Minimum
    on_date: "on %{date}"
    remove: Revert to default curve
    select_scenario: Select a scenario...
    upload: Upload a custom curve
    upload_from_scenario: Or from a scenario
    uploaded: uploaded
    uploading: Uploading curve
    use: Use curve
    value: "%{value}"
    errors:
      file_too_large: Curve must not be larger than 1MB
      illegal_value: Curve must only contain numeric values
      not_a_curve: Curve must be a CSV file containing 8760 numeric values, one for each hour in a typical year
      wrong_length: Curve must have 8760 numeric values, one for each hour in a typical year
    names:
      households_hot_water: Household hot water demand
      interconnector_1_price: Interconnector 1 price
      interconnector_2_price: Interconnector 2 price
      interconnector_3_price: Interconnector 3 price
      interconnector_4_price: Interconnector 4 price
      interconnector_5_price: Interconnector 5 price
      interconnector_6_price: Interconnector 6 price
      weather/air_temperature: Air temperature
    types:
      price:
        default: Default price curve
        default_description: Constant price throughout the year
        description_html: |
          It is assumed that the price of imported electricity is constant, set
          using the slider above. You may override this assumption by uploading a
          CSV file detailing the hourly price of imports. For more information on
          how this works, and examples of compatible CSV files, please
          <a href=%{docs_path}>see our documentation</a>.
        value: "€%{value}/MWh"
        curve_from_scenario: Curve from scenario
        imported_from: From scenario
      temperature:
        default: Default temperature curve
        default_description: A temperature curve based on KNMI-data.
        value: "%{value}°C"

