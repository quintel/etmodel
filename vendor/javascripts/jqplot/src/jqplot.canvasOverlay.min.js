/**
 * jqPlot
 * Pure JavaScript plotting plugin using jQuery
 *
 * Version: 1.0.0a_r720
 *
 * Copyright (c) 2009-2011 Chris Leonello
 * jqPlot is currently available for use in all personal or commercial projects 
 * under both the MIT (http://www.opensource.org/licenses/mit-license.php) and GPL 
 * version 2.0 (http://www.gnu.org/licenses/gpl-2.0.html) licenses. This means that you can 
 * choose the license that best suits your project and use it accordingly. 
 *
 * Although not required, the author would appreciate an email letting him 
 * know of any substantial use of jqPlot.  You can reach the author at: 
 * chris at jqplot dot com or see http://www.jqplot.com/info.php .
 *
 * If you are feeling kind and generous, consider supporting the project by
 * making a donation at: http://www.jqplot.com/donate.php .
 *
 * sprintf functions contained in jqplot.sprintf.js by Ash Searle:
 *
 *     version 2007.04.27
 *     author Ash Searle
 *     http://hexmen.com/blog/2007/03/printf-sprintf/
 *     http://hexmen.com/js/sprintf.js
 *     The author (Ash Searle) has placed this code in the public domain:
 *     "This code is unrestricted: you are free to use it however you like."
 * 
 */
(function(b){b.jqplot.CanvasOverlay=function(g){var e=g||{};this.options={show:b.jqplot.config.enablePlugins,deferDraw:false};this.objects=[];this.objectNames=[];this.canvas=null;this.markerRenderer=new b.jqplot.MarkerRenderer({style:"line"});this.markerRenderer.init();if(e.objects){var j=e.objects,h;for(var f=0;f<j.length;f++){h=j[f];for(var k in h){switch(k){case"line":this.addLine(h[k]);break;case"horizontalLine":this.addHorizontalLine(h[k]);break;case"dashedHorizontalLine":this.addDashedHorizontalLine(h[k]);break}}}}b.extend(true,this.options,e)};b.jqplot.CanvasOverlay.postPlotInit=function(h,g,f){var e=f||{};this.plugins.canvasOverlay=new b.jqplot.CanvasOverlay(e.canvasOverlay)};function c(e){this.type="line";this.options={name:null,show:true,lineWidth:2,lineCap:"round",color:"#666666",shadow:true,shadowAngle:45,shadowOffset:1,shadowDepth:3,shadowAlpha:"0.07",xaxis:"xaxis",yaxis:"yaxis",start:[],stop:[]};b.extend(true,this.options,e)}function a(e){this.type="horizontalLine";this.options={name:null,show:true,lineWidth:2,lineCap:"round",color:"#666666",shadow:true,shadowAngle:45,shadowOffset:1,shadowDepth:3,shadowAlpha:"0.07",xaxis:"xaxis",yaxis:"yaxis",y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null};b.extend(true,this.options,e)}function d(e){this.type="dashedHorizontalLine";this.options={name:null,show:true,lineWidth:2,lineCap:"butt",color:"#666666",shadow:true,shadowAngle:45,shadowOffset:1,shadowDepth:3,shadowAlpha:"0.07",xaxis:"xaxis",yaxis:"yaxis",y:null,xmin:null,xmax:null,xOffset:"6px",xminOffset:null,xmaxOffset:null,dashPattern:[8,8]};b.extend(true,this.options,e)}b.jqplot.CanvasOverlay.prototype.addLine=function(f){var e=new c(f);this.objects.push(e);this.objectNames.push(e.options.name)};b.jqplot.CanvasOverlay.prototype.addHorizontalLine=function(f){var e=new a(f);this.objects.push(e);this.objectNames.push(e.options.name)};b.jqplot.CanvasOverlay.prototype.addDashedHorizontalLine=function(f){var e=new d(f);this.objects.push(e);this.objectNames.push(e.options.name)};b.jqplot.CanvasOverlay.prototype.removeObject=function(e){if(b.type(e)=="number"){this.objects.splice(e,1);this.objectNames.splice(e,1)}else{var f=b.inArray(e,this.objectNames);if(f!=-1){this.objects.splice(f,1);this.objectNames.splice(f,1)}}};b.jqplot.CanvasOverlay.prototype.getObject=function(e){if(b.type(e)=="number"){return this.objects[e]}else{var f=b.inArray(e,this.objectNames);if(f!=-1){return this.objects[f]}}};b.jqplot.CanvasOverlay.prototype.get=b.jqplot.CanvasOverlay.prototype.getObject;b.jqplot.CanvasOverlay.prototype.clear=function(e){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight())};b.jqplot.CanvasOverlay.prototype.draw=function(v){var o,m=this.objects,r=this.markerRenderer,h,s;if(this.options.show){this.canvas._ctx.clearRect(0,0,this.canvas.getWidth(),this.canvas.getHeight());for(var x=0;x<m.length;x++){o=m[x];var p=b.extend(true,{},o.options);if(o.options.show){r.shadow=o.options.shadow;switch(o.type){case"line":r.style="line";p.closePath=false;h=[v.axes[o.options.xaxis].u2p(o.options.start[0]),v.axes[o.options.yaxis].u2p(o.options.start[1])];s=[v.axes[o.options.xaxis].u2p(o.options.stop[0]),v.axes[o.options.yaxis].u2p(o.options.stop[1])];r.draw(h,s,this.canvas._ctx,p);break;case"horizontalLine":if(o.options.y!=null){r.style="line";p.closePath=false;var g=v.axes[o.options.xaxis],B,w,n=v.axes[o.options.yaxis].u2p(o.options.y),t=o.options.xminOffset||o.options.xOffset,l=o.options.xmaxOffset||o.options.xOffset;if(o.options.xmin!=null){B=g.u2p(o.options.xmin)}else{if(t!=null){if(b.type(t)=="number"){B=g.u2p(g.min+t)}else{if(b.type(t)=="string"){B=g.u2p(g.min)+parseFloat(t)}}}}if(o.options.xmax!=null){w=g.u2p(o.options.xmax)}else{if(l!=null){if(b.type(l)=="number"){w=g.u2p(g.max-l)}else{if(b.type(l)=="string"){w=g.u2p(g.max)-parseFloat(l)}}}}if(w!=null&&B!=null){r.draw([B,n],[w,n],this.canvas._ctx,p)}}break;case"dashedHorizontalLine":var f=o.options.dashPattern;var q=0;for(var x=0;x<f.length;x++){q+=f[x]}if(o.options.y!=null){r.style="line";p.closePath=false;var g=v.axes[o.options.xaxis],B,w,n=v.axes[o.options.yaxis].u2p(o.options.y),t=o.options.xminOffset||o.options.xOffset,l=o.options.xmaxOffset||o.options.xOffset;if(o.options.xmin!=null){B=g.u2p(o.options.xmin)}else{if(t!=null){if(b.type(t)=="number"){B=g.u2p(g.min+t)}else{if(b.type(t)=="string"){B=g.u2p(g.min)+parseFloat(t)}}}}if(o.options.xmax!=null){w=g.u2p(o.options.xmax)}else{if(l!=null){if(b.type(l)=="number"){w=g.u2p(g.max-l)}else{if(b.type(l)=="string"){w=g.u2p(g.max)-parseFloat(l)}}}}if(w!=null&&B!=null){var k=Math.ceil((w-B)/q);var A=B,z;for(var x=0;x<k;x++){for(var u=0;u<f.length;u+=2){z=A+f[u];r.draw([A,n],[z,n],this.canvas._ctx,p);A+=f[u];if(u<f.length-1){A+=f[u+1]}}}}break}}}}}};b.jqplot.CanvasOverlay.postPlotDraw=function(){this.plugins.canvasOverlay.canvas=new b.jqplot.GenericCanvas();this.eventCanvas._elem.before(this.plugins.canvasOverlay.canvas.createElement({top:0,right:0,bottom:0,left:0},"jqplot-overlayCanvas-canvas",this._plotDimensions));this.plugins.canvasOverlay.canvas.setContext();if(!this.plugins.canvasOverlay.deferDraw){this.plugins.canvasOverlay.draw(this)}};b.jqplot.postInitHooks.push(b.jqplot.CanvasOverlay.postPlotInit);b.jqplot.postDrawHooks.push(b.jqplot.CanvasOverlay.postPlotDraw)})(jQuery);